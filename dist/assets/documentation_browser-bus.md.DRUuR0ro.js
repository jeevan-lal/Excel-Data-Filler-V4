import{_ as i,c as e,a2 as a,o as t}from"./chunks/framework.BLxugvkI.js";const k=JSON.parse('{"title":"Browser Bus","description":"","frontmatter":{},"headers":[],"relativePath":"documentation/browser-bus.md","filePath":"documentation/browser-bus.md","lastUpdated":1731430424000}'),n={name:"documentation/browser-bus.md"};function l(h,s,o,p,r,d){return t(),e("div",null,s[0]||(s[0]=[a(`<h1 id="browser-bus" tabindex="-1">Browser Bus <a class="header-anchor" href="#browser-bus" aria-label="Permalink to &quot;Browser Bus&quot;">​</a></h1><p>A simple javascript code to <code>communicate</code> data between browser <code>tabs</code>.</p><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h2><ul><li><strong>Data Sharing:</strong> Allows sharing data between open tabs of the same origin or not.</li><li><strong>Real-Time Updates:</strong> Data changes are reflected across all connected tabs.</li></ul><h2 id="how-it-works" tabindex="-1">How it works <a class="header-anchor" href="#how-it-works" aria-label="Permalink to &quot;How it works&quot;">​</a></h2><ol><li><p><strong>Request Sending:</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// SEND REQUEST</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$fns.connection.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">send</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;SEND REQUEST&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div></li><li><p><strong>Request Receiving:</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// RECEIVER</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$fns.connection.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">receive</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;REQUEST DATA: &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, data);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // STOP LISTENER</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // $fns.connection.listener.stop();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // REMOVE LISTENER</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // $fns.connection.listener.remove();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div></li></ol><h2 id="stop-and-remove-listener" tabindex="-1">Stop and Remove Listener <a class="header-anchor" href="#stop-and-remove-listener" aria-label="Permalink to &quot;Stop and Remove Listener&quot;">​</a></h2><p>This helps to prevent unnecessary processing when data is no longer needed.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// STOP</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$fns.connection.listener.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// REMOVE</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$fns.connection.listener.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">remove</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h2 id="reset-listener" tabindex="-1">Reset Listener <a class="header-anchor" href="#reset-listener" aria-label="Permalink to &quot;Reset Listener&quot;">​</a></h2><p>If the listener is removed or stopped, the receiver will no longer function. To restart the receiver, you can reset the listener.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// RESET LISTENER</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$fns.connection.listener.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h2 id="settings" tabindex="-1">Settings <a class="header-anchor" href="#settings" aria-label="Permalink to &quot;Settings&quot;">​</a></h2><p>Connection default settings -</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Is allow connection in iframe</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;allow_iframe&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // URLs of the page to send the connection from.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;senderURLs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [],</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // URL of the page to receive the connection data.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;receiverTab&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><table tabindex="0"><thead><tr><th>Setting</th><th>Description</th><th>Value</th></tr></thead><tbody><tr><td><code>allow_iframe</code></td><td>Indicates whether the application allows connections within an iframe.</td><td><code>false</code></td></tr><tr><td><code>senderURLs</code></td><td>An array containing the URLs of the pages from which the connection is sent. <br><br> If there are multiple <code>iframes</code> on the page, you can specify the <code>URL</code> for iframe here.</td><td><code>[]</code> (empty array)</td></tr><tr><td><code>receiverTab</code></td><td>An object containing the URL of the page that will receive the connection data.</td><td><code>{}</code> (empty object)</td></tr></tbody></table><p>If the <code>senderURLs</code> data is empty, the connection send request from all iframes if the site has iframes.</p><p>If the <code>receiverTab</code> data is empty, the connection is triggered to all tabs. If you want to customize this behavior, you can use the parameters provided in the Chrome extension API, specifically the tabs API.</p><p>For more information on how to use these parameters, you can refer to the <a href="https://developer.chrome.com/docs/extensions/reference/api/tabs?hl=en#parameters_19" target="_blank" rel="noreferrer">Chrome Extension Tabs API</a>.</p><h3 id="how-to-set-settings" tabindex="-1">How to Set Settings <a class="header-anchor" href="#how-to-set-settings" aria-label="Permalink to &quot;How to Set Settings&quot;">​</a></h3><p>These settings should be established before <code>sending</code> a connection request.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// SETTINGS</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$fns.connection.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">settings</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  allow_iframe: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  senderURLs: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://temp-mail.org/en/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  receiverTab: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    url: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://formfiller.ctechhindi.in/*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Then use \`connection.send\`</span></span></code></pre></div><ul><li><strong>allow_iframe</strong>: This setting is set to <code>false</code>, which means that the connection will not be allowed within an iframe.</li><li><strong>senderURLs</strong>: In this case, the only allowed sender URL is <code>https://temp-mail.org/en/</code>. This means that only requests originating from this URL will be able to send connection data.</li><li><strong>receiverTab</strong>: The specified URL is <code>https://formfiller.ctechhindi.in/*</code>, which indicates that any page under this domain can receive the connection.</li></ul>`,24)]))}const E=i(n,[["render",l]]);export{k as __pageData,E as default};
